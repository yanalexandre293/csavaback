// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ava.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Aula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DisciplinaId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.HasIndex("DisciplinaId");

                    b.ToTable("Aula");
                });

            modelBuilder.Entity("AulaEstudante", b =>
                {
                    b.Property<int>("AulasAssistidasId")
                        .HasColumnType("integer");

                    b.Property<int>("EstudanteId")
                        .HasColumnType("integer");

                    b.HasKey("AulasAssistidasId", "EstudanteId");

                    b.HasIndex("EstudanteId");

                    b.ToTable("AulaEstudante");
                });

            modelBuilder.Entity("Disciplina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.HasKey("Id");

                    b.ToTable("Disciplina");
                });

            modelBuilder.Entity("DisciplinaEstudante", b =>
                {
                    b.Property<int>("DisciplinasCursadasId")
                        .HasColumnType("integer");

                    b.Property<int>("EstudanteId")
                        .HasColumnType("integer");

                    b.HasKey("DisciplinasCursadasId", "EstudanteId");

                    b.HasIndex("EstudanteId");

                    b.ToTable("DisciplinaEstudante");
                });

            modelBuilder.Entity("Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Usuarios", (string)null);

                    b.HasDiscriminator<int>("TipoUsuario");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Admin", b =>
                {
                    b.HasBaseType("Usuario");

                    b.ToTable("Usuarios", (string)null);

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("Estudante", b =>
                {
                    b.HasBaseType("Usuario");

                    b.ToTable("Usuarios", (string)null);

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("Professor", b =>
                {
                    b.HasBaseType("Usuario");

                    b.ToTable("Usuarios", (string)null);

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("Aula", b =>
                {
                    b.HasOne("Disciplina", "Disciplina")
                        .WithMany("Aulas")
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Disciplina");
                });

            modelBuilder.Entity("AulaEstudante", b =>
                {
                    b.HasOne("Aula", null)
                        .WithMany()
                        .HasForeignKey("AulasAssistidasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Estudante", null)
                        .WithMany()
                        .HasForeignKey("EstudanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DisciplinaEstudante", b =>
                {
                    b.HasOne("Disciplina", null)
                        .WithMany()
                        .HasForeignKey("DisciplinasCursadasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Estudante", null)
                        .WithMany()
                        .HasForeignKey("EstudanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Disciplina", b =>
                {
                    b.Navigation("Aulas");
                });
#pragma warning restore 612, 618
        }
    }
}
